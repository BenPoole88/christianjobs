<?php

use Drupal\Core\Config\Config;
use Drupal\Core\Config\FileStorage;

/**
 * Update layout.
 */
function job_admin_update_8001() {
  $source = new FileStorage(drupal_get_path('module', 'job_admin').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'field.field.service.job_post_set_support.job_roles',
    'field.field.service.job_post_set_support.notes',
    'field.field.service.membership.membership',
    'field.field.service.membership.notes',
    'field.field.service.rpo.job_role',
    'field.field.service.rpo.notes',
    'field.storage.service.job_role',
    'field.storage.service.job_roles',
    'field.storage.service.membership',
    'field.storage.service.notes',
    'service.service_type.job_post_set_support',
    'service.service_type.membership',
    'service.service_type.rpo',
    'user.role.account_manager',
    'user.role.team_manager',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }
}

/**
 * Update layout.
 */
function job_admin_update_8002() {
  $source = new FileStorage(drupal_get_path('module', 'job_admin').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'service.service_type.job_post_set_support',
    'service.service_type.membership',
    'service.service_type.rpo',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }
}

/**
 * Install job board view.
 */
function job_admin_update_8003() {
  $source = new FileStorage(drupal_get_path('module', 'job_admin').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'views.view.jobs_admin',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }
}

/**
 * Install cshs module.
 */
function job_admin_update_8004() {
  $source = new FileStorage(drupal_get_path('module', 'job_admin').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'views.view.jobs_admin',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }

  \Drupal::service('module_installer')->install(['cshs']);
}

/**
 * Install employer and membership views.
 */
function job_admin_update_8005() {
  $source = new FileStorage(drupal_get_path('module', 'job_admin') . '/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'views.view.employer_admin',
    'views.view.membership_admin',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }
}

/**
 * Update layout.
 */
function job_admin_update_8006() {
  \Drupal::service('module_installer')->install(['rlmcrm_ui']);

  $source = new FileStorage(drupal_get_path('module', 'job_admin').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  /** @var \Drupal\Core\Config\ConfigManagerInterface $config_manager */
  $config_manager = \Drupal::service('config.manager');

  $configs_to_install = [
    'views.view.job_board__contact_jobs',
    'core.entity_view_display.user.user.rlmcrm_ui_employer',
  ];
  foreach ($configs_to_install as $name) {
    $config = new Config(
      $name,
      \Drupal::service('config.storage'),
      \Drupal::service('event_dispatcher'),
      \Drupal::service('config.typed')
    );
    $config->setData($source->read($name));

    if ($entity_type = $config_manager->getEntityTypeIdByName($name)) {
      /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $entity_storage */
      $entity_storage = $config_manager->getEntityManager()->getStorage($entity_type);

      $id = $entity_storage->getIDFromConfigName($name, $entity_storage->getEntityType()->getConfigPrefix());
      if ($config_storage->exists($name)) {
        /** @var \Drupal\Core\Config\Entity\ConfigEntityBase $entity */
        $entity = $entity_storage->load($id);
        $entity = $entity_storage->updateFromStorageRecord($entity, $config->get());
      }
      else {
        $entity = $entity_storage->createFromStorageRecord($config->get());
      }

      if ($entity->isInstallable()) {
        $entity->trustData()->save();
      }
    }
    else {
      $config->save();
    }
  }
}
