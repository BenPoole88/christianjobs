<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItem;

/**
 * Implements hook_entity_base_field_info_alter()
 */
function job_board_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() != 'job_role') {
    return [];
  }

  $fields['publish_date'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('Publish Date'))
    ->setDescription(t('The first date on which this job will be published.'))
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['end_date'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('End Date'))
    ->setDescription(t('The last date on which this job will be published.'))
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['featured_dates'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('Featured Dates'))
    ->setDescription(t('The dates on which this job is featured.'))
    ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  return $fields;
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function job_board_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() != 'job_role') {
    return;
  }

  $fields['files']->setSetting('file_extensions', 'pdf txt doc docx pptx ppt png');
}
