<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItem;

/**
 * Implements hook_install().
 */
function job_board_install() {
  $manager = \Drupal::entityDefinitionUpdateManager();

  $fields['publish_date'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('Publish Date'))
    ->setDescription(t('The first date on which this job will be published.'))
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE)
    ->setName('publish_date')
    ->setTargetEntityTypeId('job_role')
    ->setProvider('job_board');
  $fields['end_date'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('End Date'))
    ->setDescription(t('The last date on which this job will be published.'))
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['featured_dates'] = BaseFieldDefinition::create('datetime')
    ->setSetting('datetime_type', DateTimeItem::DATETIME_TYPE_DATE)
    ->setLabel(t('Featured Dates'))
    ->setDescription(t('The dates on which this job is featured.'))
    ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['package'] = BaseFieldDefinition::create('list_string')
    ->setSetting('allowed_values_function', 'job_board_job_package_options')
    ->setLabel(t('Package'))
    ->setDescription(t('The base backage to use with this job.'))
    ->setCardinality(1)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['paid'] = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Paid'))
    ->setDescription(t('Has this job role been paid for.'))
    ->setSetting('on_label', t('Paid'))
    ->setSetting('off_label', t('Draft'))
    ->setCardinality(1)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  foreach ($fields as $field_name => $definition) {
    $manager->installFieldStorageDefinition($field_name, 'job_role', 'job_board', $definition);
  }
}

/**
 * Add package and paid for fields.
 */
function job_board_update_8001() {
  $manager = \Drupal::entityDefinitionUpdateManager();

  $fields['package'] = BaseFieldDefinition::create('list_string')
    ->setSetting('allowed_values_function', 'job_board_job_package_options')
    ->setLabel(t('Package'))
    ->setDescription(t('The base backage to use with this job.'))
    ->setCardinality(1)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
  $fields['paid'] = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Paid'))
    ->setDescription(t('Has this job role been paid for.'))
    ->setSetting('on_label', t('Paid'))
    ->setSetting('off_label', t('Draft'))
    ->setCardinality(1)
    ->setRevisionable(TRUE)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  foreach ($fields as $field_name => $definition) {
    $manager->installFieldStorageDefinition($field_name, 'job_role', 'job_board', $definition);
  }
}

