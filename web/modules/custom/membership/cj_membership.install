<?php

use Drupal\cj_membership\Entity\Membership;
use Drupal\cj_membership\Entity\VolunteerRole;
use Drupal\Core\Config\Config;
use Drupal\Core\Config\FileStorage;
use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_update_dependencies().
 */
function cj_membership_update_dependencies() {
  $d = [];

  $d['cj_membership'][8004] = [
    'job_board' => 8026,
  ];

  return $d;
}

/**
 * Install the tax
 */
function cj_membership_update_8001() {
  // Install modules
  \Drupal::service('module_installer')->install([
    'commerce_tax',
  ]);

  $source = new FileStorage(drupal_get_path('module', 'cj_membership').'/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  $configs_to_install = [
    'commerce_order.commerce_order_item_type.cj_membership',
  ];
  foreach ($configs_to_install as $name) {
    $config_storage->write($name, $source->read($name));
  }
}

/**
 * Install the level field.
 */
function cj_membership_update_8002() {
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition(
    'level',
    'cj_membership',
    'cj_membership',
    BaseFieldDefinition::create('list_integer')
      ->setLabel(new TranslatableMarkup('Membership Level'))
      ->setSetting('allowed_values', [
        Membership::LEVEL_DIRECTORY => new TranslatableMarkup('Directory'),
        Membership::LEVEL_FULL => new TranslatableMarkup('Full'),
      ])
      ->setRevisionable(TRUE)
      ->setDisplayConfigurable('view', TRUE
    )
  );
}

/**
 * Install volunteer roles.
 *
 * @throws \Drupal\Core\Entity\Exception\EntityTypeIdLengthException
 */
function cj_membership_update_8003() {
  \Drupal::entityDefinitionUpdateManager()->installEntityType(new ContentEntityType([
    "id" => "volunteer_role",
    "class" => VolunteerRole::class,
    "label" => new TranslatableMarkup("Volunteer Role"),
    "label_singular" => new TranslatableMarkup("volunteer role"),
    "label_plural" => new TranslatableMarkup("volunteer roles"),
    "handlers" =>[
      "storage" => \Drupal\Core\Entity\Sql\SqlContentEntityStorage::class,
      "access" => \Drupal\cj_membership\Entity\VolunteerRoleAccessControlHandler::class,
      "permission_provider" => \Drupal\cj_membership\Entity\VolunteerRolePermissionProvider::class,
      "form" => [
        "default" => \Drupal\cj_membership\Form\VolunteerRoleForm::class
      ],
      "views_data" => \Drupal\views\EntityViewsData::class,
      "route_provider" => [
        "html" => \Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider::class,
      ]
    ],
    "base_table" => "volunteer_role",
    "revision_table" => "volunteer_role_revision",
    "admin_permission" => "administer volunteer roles",
    "links" => [
      "canonical" => "/volunteer/[volunteer_role]",
      "edit-form" => "/volunteer/[volunteer_role]/edit",
      "delete-form" => "/volunteer/[volunteer_role]/delete",
    ],
    "entity_keys" => [
      "id" => "id",
      "revision" => "vid",
      "uuid" => "uuid",
      "label" => "label",
      "owner" => "owner"
    ]
  ]));
}

function cj_membership_update_8004() {
  $source = new FileStorage(drupal_get_path('module', 'cj_membership') . '/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  /** @var \Drupal\Core\Config\ConfigManagerInterface $config_manager */
  $config_manager = \Drupal::service('config.manager');
  $configs_to_install = [
    'views.view.volunteer_board',
  ];
  foreach ($configs_to_install as $name) {
    $config = new Config($name, \Drupal::service('config.storage'), \Drupal::service('event_dispatcher'), \Drupal::service('config.typed'));
    $config->setData($source->read($name));

    if ($entity_type = $config_manager->getEntityTypeIdByName($name)) {
      /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $entity_storage */
      $entity_storage = $config_manager->getEntityManager()->getStorage($entity_type);

      $id = $entity_storage->getIDFromConfigName($name, $entity_storage->getEntityType()->getConfigPrefix());
      if ($config_storage->exists($name)) {
        /** @var \Drupal\Core\Config\Entity\ConfigEntityBase $entity */
        $entity = $entity_storage->load($id);
        $entity = $entity_storage->updateFromStorageRecord($entity, $config->get());
      }
      else {
        $entity = $entity_storage->createFromStorageRecord($config->get());
      }

      if ($entity->isInstallable()) {
        $entity->trustData()->save();
      }
    }
    else {
      $config->save();
    }
  }

  // Clear plugin manager caches.
  \Drupal::getContainer()->get('plugin.cache_clearer')->clearCachedDefinitions();
}

function cj_membership_update_8005() {
  $source = new FileStorage(drupal_get_path('module', 'cj_membership') . '/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $config_storage */
  $config_storage = \Drupal::service('config.storage');

  /** @var \Drupal\Core\Config\ConfigManagerInterface $config_manager */
  $config_manager = \Drupal::service('config.manager');
  $configs_to_install = [
    'core.entity_view_mode.user.employer_popup',
    'core.entity_view_mode.volunteer_role.popup',
  ];
  foreach ($configs_to_install as $name) {
    $config = new Config($name, \Drupal::service('config.storage'), \Drupal::service('event_dispatcher'), \Drupal::service('config.typed'));
    $config->setData($source->read($name));

    if ($entity_type = $config_manager->getEntityTypeIdByName($name)) {
      /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $entity_storage */
      $entity_storage = $config_manager->getEntityManager()->getStorage($entity_type);

      $id = $entity_storage->getIDFromConfigName($name, $entity_storage->getEntityType()->getConfigPrefix());
      if ($config_storage->exists($name)) {
        /** @var \Drupal\Core\Config\Entity\ConfigEntityBase $entity */
        $entity = $entity_storage->load($id);
        $entity = $entity_storage->updateFromStorageRecord($entity, $config->get());
      }
      else {
        $entity = $entity_storage->createFromStorageRecord($config->get());
      }

      if ($entity->isInstallable()) {
        $entity->trustData()->save();
      }
    }
    else {
      $config->save();
    }
  }

  $update_manager = \Drupal::entityDefinitionUpdateManager();
  $def = \Drupal::entityTypeManager()->getDefinition('volunteer_role');
  $def->set('field_ui_base_route', 'entity.volunteer_role.admin_form');
  $update_manager->updateEntityType($def);

  // Clear plugin manager caches.
  \Drupal::getContainer()->get('plugin.cache_clearer')->clearCachedDefinitions();
}
